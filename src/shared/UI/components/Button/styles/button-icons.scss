@use 'sass:map';

@import './button-icons-list';
@import './button-list';
@import './button-map';

@mixin button-icons-apply-property($color) {
  *[data-svg-property='fill'] {
    fill: $color;
  }

  *[data-svg-property='stroke'] {
    stroke: $color;
  }
}

@mixin button-icons-state-styles($color, $state, $variant) {
  @if $state == 'idle' {
    @include button-icons-apply-property(
      map.get($--xd-color-map, $variant + '-' + $color)
    );
  } @else if $state == 'disabled' {
    @include button-icons-apply-property(
      map.get($--xd-color-map, $variant + '-' + $color + '-disabled')
    );
  } @else {
    @include button-icons-apply-property(
      map.get($--xd-color-map, $variant + '-' + $color + '-hover')
    );
  }
}

@mixin button-icons-apply-margins {
  &--start {
    margin-right: map.get($--xd-button-map, 'btn-space-between');
  }

  &--end {
    margin-left: map.get($--xd-button-map, 'btn-space-between');
  }
}

@mixin button-icons-apply-sizes {
  &--small {
    height: map.get($--xd-button-map, 'btn-small-icon-size');
  }

  &--medium {
    height: map.get($--xd-button-map, 'btn-medium-icon-size');
  }

  &--large {
    height: map.get($--xd-button-map, 'btn-large-icon-size');
  }
}

@mixin button-icons($className, $color, $state, $variant) {
  #{$className}__icon {
    @include button-icons-state-styles($color, $state, $variant);

    @if $state == 'idle' {
      @include button-icons-apply-margins;
      @include button-icons-apply-sizes;
    }
  }
}
